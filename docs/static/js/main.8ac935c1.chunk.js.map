{"version":3,"sources":["components/addCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/Categories.js","components/gifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","input","setInput","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGif","search","a","search_url","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","ListCategories","Categories","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAMK,OAAOC,OAAS,IACtBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAeO,OAEjCN,EAAS,MAMb,UACI,0BADJ,sCAEI,uBACA,uBACA,uBACIO,KAAK,OAELC,MAAOT,EAEPU,SAxBS,SAACP,GAClBF,EAASE,EAAEQ,OAAOF,QAyBVG,YAAY,kB,+BCjCfC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEF,mCAEJ,uCAERC,EAAaC,mFAAsCC,UAAUJ,GAN/C,SAQCK,MAAMH,GARP,cAQZI,EARY,gBAUKA,EAAKC,OAVV,uBAUVC,EAVU,EAUVA,KAGFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAjBxB,kBAqBXM,GArBW,4CAAH,sDCENO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,SCFJO,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEtB,ECJwB,SAACA,GACzB,MAA0BpC,mBAAS,CAC/BuB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACN1B,EAAOsB,GACFK,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAKtB,CAACD,IAEGE,EDdmBK,CAAaP,GAA/Bb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,QAEd,OACI,qCACI,mCAAMD,KAELC,GAAW,4CAEZ,qBAAKL,UAAU,YAAf,SAIQT,EAAKE,KAAI,SAAAC,GAAG,OAER,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEjBxBiB,EAAiB,WAE1B,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,qCACI,uBACA,cAAE,EAAF,CAAcA,cAAeA,IAC7B,uBAEA,uBAIA,6BACK8C,EAAWpB,KAAI,SAAAW,GACZ,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YClB5BU,EAAe,WAIxB,OACI,qCACI,8CAEA,uBAEA,cAAC,EAAD,QCPZC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8ac935c1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [input, setInput] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (input.trim().length > 2) {\r\n            setCategories(cats => [input, ...cats])\r\n\r\n            setInput('')\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label /> Por favor ingresa una categor√≠a\r\n            <br />\r\n            <br />\r\n            <input\r\n                type=\"text\"\r\n\r\n                value={input}\r\n\r\n                onChange={handleChange}\r\n\r\n                placeholder='Categoria'\r\n\r\n            />\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGif = async (search) => {\r\n\r\n    const api_key = 'xPnqzSijoXkXdhjeKHbpnUdAL4Xfk82x'\r\n\r\n    const url = 'https://api.giphy.com/v1/gifs/search'\r\n\r\n    let search_url = url + '?api_key=' + api_key + '&q=' + encodeURI(search)\r\n\r\n    const resp = await fetch(search_url)\r\n\r\n    const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGif } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n            <h3> {category}</h3>\r\n\r\n            {loading && <p>Loading ...</p>}\r\n\r\n            <div className='card-grid'>\r\n\r\n\r\n                {\r\n                    data.map(img =>\r\n                    (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} /> //Esta es otra forma de pasar el Prop\r\n                    )\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGif(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './addCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nexport const ListCategories = () => {\r\n\r\n    const [Categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n    return (\r\n        <>\r\n            <br />\r\n            < AddCategory setCategories={setCategories} />\r\n            <br />\r\n\r\n            <hr />\r\n\r\n\r\n\r\n            <ol>\r\n                {Categories.map(category => {\r\n                    return <GifGrid key={category} category={category} />\r\n                })}\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { ListCategories } from './Categories'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <hr />\r\n\r\n            <ListCategories />\r\n        </>\r\n\r\n\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './components/gifExpertApp';\n\n\nReactDOM.render(\n  <>\n    <GifExpertApp />\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}